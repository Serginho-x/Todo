{"ast":null,"code":"import _classCallCheck from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/src/components/EditTodo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/TodoList.css';\n\nvar EditTodo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditTodo, _React$Component);\n\n  function EditTodo(props) {\n    var _this;\n\n    _classCallCheck(this, EditTodo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditTodo).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = target.value;\n\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleSubmit = function (id) {\n      _this.props.editTodo(id, _this.state.value);\n\n      _this.setState({\n        isEdit: !_this.state.isEdit\n      });\n    };\n\n    _this.state = {\n      isEdit: true,\n      value: _this.props.text\n    };\n    return _this;\n  }\n\n  _createClass(EditTodo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          text = _this$props.text,\n          done = _this$props.done;\n      return this.state.isEdit ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, text), React.createElement(\"div\", {\n        className: \"ToDoList-Buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"edit icon\",\n        onClick: function onClick() {\n          return _this2.setState({\n            isEdit: !_this2.state.isEdit\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"trash icon\",\n        onClick: function onClick() {\n          return done && _this2.props.deleteTodo(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui mini input focus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Todo...\",\n        value: this.state.value,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ToDoList-Buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"check square outline icon\",\n        onClick: function onClick() {\n          return _this2.handleSubmit(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"trash icon\",\n        onClick: function onClick() {\n          return done && _this2.props.deleteTodo(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditTodo;\n}(React.Component);\n\nEditTodo.propTypes = {\n  text: PropTypes.string,\n  id: PropTypes.string,\n  done: PropTypes.bool\n};\nexport default EditTodo;","map":{"version":3,"sources":["/home/developer/Документы/Projects/Todo/src/frontend/src/components/EditTodo.js"],"names":["React","PropTypes","EditTodo","props","handleInputChange","event","target","value","setState","handleSubmit","id","editTodo","state","isEdit","text","done","deleteTodo","Component","propTypes","string","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport '../styles/TodoList.css';\n\nclass EditTodo extends React.Component {\n  static propTypes = {\n      text: PropTypes.string,\n      id: PropTypes.string,\n      done: PropTypes.bool\n    }\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        isEdit: true,\n        value: this.props.text\n      };    \n    }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    this.setState({ value: value })\n  }\n\n  handleSubmit = (id) => {\n      this.props.editTodo(id, this.state.value);\n      this.setState({isEdit: !this.state.isEdit})\n  }\n  render(){\n      const {id, text, done} =this.props\n      return (\n        this.state.isEdit ? \n        <React.Fragment>\n            <div>{text}</div>                     \n            <div className=\"ToDoList-Buttons\">\n                <i className=\"edit icon\" onClick={() => this.setState({isEdit: !this.state.isEdit})}></i>              \n                <i className=\"trash icon\" onClick={() => done && this.props.deleteTodo(id)}></i>\n            </div> \n        </React.Fragment>\n        :\n        <React.Fragment>            \n            <div className=\"ui mini input focus\">\n                <input type=\"text\" placeholder=\"Todo...\" value={this.state.value} onChange={this.handleInputChange}/>  \n            </div>\n            <div className=\"ToDoList-Buttons\">\n                <i className=\"check square outline icon\" onClick={() => this.handleSubmit(id)}></i>               \n                <i className=\"trash icon\" onClick={() => done && this.props.deleteTodo(id)}></i>\n            </div> \n        </React.Fragment>          \n      )\n  }\n}\nexport default EditTodo\n   "]},"metadata":{},"sourceType":"module"}