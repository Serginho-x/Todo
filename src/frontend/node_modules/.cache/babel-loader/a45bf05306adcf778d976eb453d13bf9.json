{"ast":null,"code":"import _regeneratorRuntime from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var _signUp =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(form) {\n    var requestOptions, response, user;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestOptions = {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(form)\n            };\n            _context.next = 3;\n            return fetch(\"http://localhost:4000/api/users/register/\", requestOptions);\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return handleResponse(response);\n\n          case 6:\n            user = _context.sent;\n            return _context.abrupt(\"return\", user);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function _signUp(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var _login =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(email, password) {\n    var requestOptions, token;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            requestOptions = {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            };\n            _context2.next = 3;\n            return fetch(\"http://localhost:4000/api/users/login/\", requestOptions);\n\n          case 3:\n            token = _context2.sent;\n            console.log('resp2', token);\n\n            if (user) {\n              localStorage.setItem('user', JSON.stringify(user));\n            }\n\n            return _context2.abrupt(\"return\", user);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function _login(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var _logout = function _logout() {\n  localStorage.removeItem('user');\n};\n\nvar handleResponse = function handleResponse(response) {\n  return response.text().then(function (text) {\n    console.log('text', response);\n    var data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        _logout();\n      }\n\n      var error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n};","map":{"version":3,"sources":["/home/developer/Документы/Projects/Todo/src/frontend/src/services/user.service.js"],"names":["_signUp","form","requestOptions","method","headers","body","JSON","stringify","fetch","response","handleResponse","user","_login","email","password","token","console","log","localStorage","setItem","_logout","removeItem","text","then","data","parse","ok","status","error","message","statusText","Promise","reject"],"mappings":";;AAAA,OAAO,IAAMA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,cADa,GACI;AACnBC,cAAAA,MAAM,EAAE,MADW;AAEnBC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAFU;AAGnBC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHa,aADJ;AAAA;AAAA,mBAMIO,KAAK,8CAA8CN,cAA9C,CANT;;AAAA;AAMbO,YAAAA,QANa;AAAA;AAAA,mBAOAC,cAAc,CAACD,QAAD,CAPd;;AAAA;AAObE,YAAAA,IAPa;AAAA,6CAQZA,IARY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPX,OAAO;AAAA;AAAA;AAAA,GAAb;AAWP,OAAO,IAAMY,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOC,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACZZ,YAAAA,cADY,GACK;AACnBC,cAAAA,MAAM,EAAE,MADW;AAEnBC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAFU;AAGnBC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEM,gBAAAA,KAAK,EAALA,KAAF;AAASC,gBAAAA,QAAQ,EAARA;AAAT,eAAf;AAHa,aADL;AAAA;AAAA,mBAMEN,KAAK,2CAA2CN,cAA3C,CANP;;AAAA;AAMZa,YAAAA,KANY;AAQlBC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;;AACA,gBAAIJ,IAAJ,EAAU;AACNO,cAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACC,SAAL,CAAeI,IAAf,CAA7B;AACH;;AAXiB,8CAYXA,IAZW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANC,MAAM;AAAA;AAAA;AAAA,GAAZ;AAeP,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzBF,EAAAA,YAAY,CAACG,UAAb,CAAwB,MAAxB;AACH,CAFM;;AAIP,IAAMX,cAAc,GAAG,SAAjBA,cAAiB,CAACD,QAAD,EAAc;AACjC,SAAOA,QAAQ,CAACa,IAAT,GAAgBC,IAAhB,CAAqB,UAAAD,IAAI,EAAI;AAChCN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,QAApB;AACA,QAAMe,IAAI,GAAGF,IAAI,IAAIhB,IAAI,CAACmB,KAAL,CAAWH,IAAX,CAArB;;AACA,QAAI,CAACb,QAAQ,CAACiB,EAAd,EAAkB;AACd,UAAIjB,QAAQ,CAACkB,MAAT,KAAoB,GAAxB,EAA6B;AACzBP,QAAAA,OAAO;AACV;;AACD,UAAMQ,KAAK,GAAIJ,IAAI,IAAIA,IAAI,CAACK,OAAd,IAA0BpB,QAAQ,CAACqB,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAOJ,IAAP;AACH,GAXM,CAAP;AAYH,CAbD","sourcesContent":["export const _signUp = async (form) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(form)\n    };\n    const response = await fetch(`http://localhost:4000/api/users/register/`, requestOptions);\n    const user = await handleResponse(response);\n    return user;\n}\n\nexport const _login = async (email, password) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password })\n    };\n    const token = await fetch(`http://localhost:4000/api/users/login/`, requestOptions);\n  \n    console.log('resp2', token);\n    if (user) {     \n        localStorage.setItem('user', JSON.stringify(user));\n    }\n    return user;\n}\n\nexport const _logout = () => {   \n    localStorage.removeItem('user');\n}\n\nconst handleResponse = (response) => {    \n    return response.text().then(text => {\n        console.log('text', response)\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                _logout();\n            }\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n        return data;\n    });\n}"]},"metadata":{},"sourceType":"module"}