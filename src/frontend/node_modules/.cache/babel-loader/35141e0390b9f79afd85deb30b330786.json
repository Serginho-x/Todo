{"ast":null,"code":"import _regeneratorRuntime from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar todolistUrl = 'http://localhost:4000/api/todos'; // URL to todolist\n\nvar FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS';\nexport var fetchAllTodos = function fetchAllTodos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(todolistUrl));\n\n              case 3:\n                response = _context.sent;\n                dispatch(success(response.data));\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(Object.keys(_context.t0), _context.t0.message);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n\n  function success(data) {\n    return {\n      type: FETCH_TODOS_SUCCESS,\n      payload: {\n        data: data\n      }\n    };\n  }\n};\nexport var addTodo = function addTodo(text) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.post(\"\".concat(todolistUrl), {\n                  text: text\n                });\n\n              case 3:\n                response = _context2.sent;\n                dispatch(addTodosSuccess(response.data));\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(Object.keys(_context2.t0), _context2.t0.message);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nvar ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\nexport var addTodosSuccess = function addTodosSuccess(response) {\n  return {\n    type: ADD_TODO_SUCCESS,\n    payload: {\n      id: response._id,\n      text: response.text\n    }\n  };\n};\nvar EDIT_TODO = 'EDIT_TODO';\nexport var editTodo = function editTodo(id, text) {\n  axios.put(\"\".concat(todolistUrl, \"/\").concat(id), {\n    text: text\n  });\n  return {\n    type: EDIT_TODO,\n    payload: {\n      id: id,\n      text: text\n    }\n  };\n};\nvar DELETE_TODO = 'DELETE_TODO';\nexport var deleteTodo = function deleteTodo(id) {\n  axios.delete(\"\".concat(todolistUrl, \"/\").concat(id));\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id: id\n    }\n  };\n};\nvar TOGGLE_SWITCH = 'TOGGLE_SWITCH';\nexport var toggleSwitch = function toggleSwitch(id, done) {\n  axios.put(\"\".concat(todolistUrl, \"/\").concat(id), {\n    done: !done\n  });\n  return {\n    type: TOGGLE_SWITCH,\n    payload: {\n      id: id,\n      done: !done\n    }\n  };\n};\nvar SEARCH_TODOS_SUCCESS = 'SEARCH_TODOS_SUCCESS';\nexport var searchTodosSuccess = function searchTodosSuccess(todoList) {\n  return {\n    type: SEARCH_TODOS_SUCCESS,\n    payload: {\n      todoList: todoList\n    }\n  };\n};\nexport var searchTodo = function searchTodo(text) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response, todoList;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"\".concat(todolistUrl));\n\n              case 2:\n                response = _context3.sent;\n                todoList = response.data.filter(function (todo) {\n                  return todo.text.toLowerCase().includes(text.toLowerCase());\n                });\n                dispatch(searchTodosSuccess(todoList));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nvar FILTER_TODO = 'FILTER_TODO';\nexport var filterTodos = function filterTodos(filterType) {\n  return {\n    type: FILTER_TODO,\n    payload: filterType\n  };\n};","map":{"version":3,"sources":["/home/developer/Документы/Projects/Todo/src/frontend/src/store/todos/todos-actions.js"],"names":["axios","todolistUrl","FETCH_TODOS_SUCCESS","fetchAllTodos","dispatch","get","response","success","data","console","log","Object","keys","message","type","payload","addTodo","text","post","addTodosSuccess","ADD_TODO_SUCCESS","id","_id","EDIT_TODO","editTodo","put","DELETE_TODO","deleteTodo","delete","TOGGLE_SWITCH","toggleSwitch","done","SEARCH_TODOS_SUCCESS","searchTodosSuccess","todoList","searchTodo","filter","todo","toLowerCase","includes","FILTER_TODO","filterTodos","filterType"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst todolistUrl = 'http://localhost:4000/api/todos';  // URL to todolist\n\nconst FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS'\nexport const fetchAllTodos = () => { \n  return async (dispatch) => {\n    try {\n    const response = await axios.get(`${todolistUrl}`);\n    dispatch(success(response.data));\n    } \n    catch(error) {\n      console.log(Object.keys(error), error.message); \n    }\n  }       \n    function success (data){\n      return {\n        type: FETCH_TODOS_SUCCESS, \n        payload: {\n          data\n        }\n      }}\n  };\n\nexport const addTodo = text => {\n  return async (dispatch) => {\n    try {\n    const response = await axios.post(`${todolistUrl}`, {text});\n    dispatch(addTodosSuccess(response.data));\n    } \n    catch(error){\n      console.log(Object.keys(error), error.message); \n    }\n  }\n}\n \nconst ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS'\nexport const addTodosSuccess = response => {  \n  return {\n    type: ADD_TODO_SUCCESS,\n    payload: {\n      id: response._id,\n      text: response.text\n    }\n  }\n}\n\nconst EDIT_TODO = 'EDIT_TODO'\nexport const editTodo = (id, text) => {\n  axios.put(`${todolistUrl}/${id}`, {text});\n  return {\n    type: EDIT_TODO,\n    payload: {\n      id,\n      text\n    }\n  }\n}\n\nconst DELETE_TODO = 'DELETE_TODO'\nexport const deleteTodo = (id) => {\n  axios.delete(`${todolistUrl}/${id}`);\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id\n    }\n  }\n}\n\nconst TOGGLE_SWITCH = 'TOGGLE_SWITCH'\nexport const toggleSwitch = (id, done) => {\n  axios.put(`${todolistUrl}/${id}`, {done: !done});\n  return {\n    type: TOGGLE_SWITCH,\n    payload: {\n      id,\n      done: !done\n    }\n  }\n}\n\nconst SEARCH_TODOS_SUCCESS = 'SEARCH_TODOS_SUCCESS'\nexport const searchTodosSuccess = todoList => {\n  return {\n    type: SEARCH_TODOS_SUCCESS,\n    payload: {\n      todoList\n    }\n  }\n}\n\nexport const searchTodo = text => {\n  return async (dispatch) => {\n    const response = await axios.get(`${todolistUrl}`);\n    const todoList = response.data.filter((todo) => todo.text.toLowerCase().includes(text.toLowerCase()))\n      dispatch(searchTodosSuccess (todoList));\n  }\n}\n\nconst FILTER_TODO = 'FILTER_TODO'\nexport const filterTodos = filterType => {\n  return {\n    type: FILTER_TODO,\n    payload: filterType\n    \n  }\n}"]},"metadata":{},"sourceType":"module"}