{"ast":null,"code":"import _regeneratorRuntime from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { _login, _logout } from '../../services/user.service';\nimport history from '../../history';\nvar LOGIN_REQUEST = 'LOGIN_REQUEST';\nvar LOGIN_SUCCESS = 'LOGIN_REQUEST';\nvar LOGIN_FAILURE = 'LOGIN_FAILURE';\nvar LOGOUT = 'LOGOUT';\nexport var login = function login(email, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(request({\n                  email: email\n                }));\n                _context.next = 3;\n                return _login(email, password).then(function (user) {\n                  dispatch(success(user));\n                  history.push('/');\n                }, function (error) {\n                  dispatch(failure(error));\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n\n  function request(user) {\n    return {\n      type: LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: LOGIN_FAILURE,\n      error: error\n    };\n  }\n};\nexport var logout = function logout() {\n  _logout();\n\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["/home/developer/Документы/Projects/Todo/src/frontend/src/store/users/users-action.js"],"names":["_login","_logout","history","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","login","email","password","dispatch","request","then","user","success","push","error","failure","type","logout"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,OAAjB,QAA+B,6BAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,IAAMC,aAAa,GAAG,eAAtB;AACA,IAAMC,aAAa,GAAG,eAAtB;AACA,IAAMC,aAAa,GAAG,eAAtB;AACA,IAAMC,MAAM,GAAG,QAAf;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACtC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACHA,gBAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEH,kBAAAA,KAAK,EAALA;AAAF,iBAAD,CAAR,CAAR;AADG;AAAA,uBAEGR,MAAM,CAACQ,KAAD,EAAQC,QAAR,CAAN,CACLG,IADK,CAEF,UAAAC,IAAI,EAAI;AACJH,kBAAAA,QAAQ,CAACI,OAAO,CAACD,IAAD,CAAR,CAAR;AACAX,kBAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACH,iBALC,EAMF,UAAAC,KAAK,EAAI;AACLN,kBAAAA,QAAQ,CAACO,OAAO,CAACD,KAAD,CAAR,CAAR;AACH,iBARC,CAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,WAASL,OAAT,CAAiBE,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEf,aAAR;AAAuBU,MAAAA,IAAI,EAAJA;AAAvB,KAAP;AAAsC;;AAC/D,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEd,aAAR;AAAuBS,MAAAA,IAAI,EAAJA;AAAvB,KAAP;AAAsC;;AAC/D,WAASI,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAEb,aAAR;AAAuBW,MAAAA,KAAK,EAALA;AAAvB,KAAP;AAAuC;AACpE,CAlBM;AAoBP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AACxBlB,EAAAA,OAAO;;AACP,SAAO;AAAEiB,IAAAA,IAAI,EAAEZ;AAAR,GAAP;AACH,CAHM","sourcesContent":["import { _login, _logout} from '../../services/user.service';\nimport history from '../../history'\n\nconst LOGIN_REQUEST = 'LOGIN_REQUEST'\nconst LOGIN_SUCCESS = 'LOGIN_REQUEST'\nconst LOGIN_FAILURE = 'LOGIN_FAILURE'\nconst LOGOUT = 'LOGOUT'\n\nexport const login = (email, password) => {\n    return async (dispatch) => {\n        dispatch(request({ email }));\n        await _login(email, password)\n        .then(            \n            user => { \n                dispatch(success(user));\n                history.push('/');\n            },\n            error => {\n                dispatch(failure(error));\n            }\n        );\n    };\n\n    function request(user) { return { type: LOGIN_REQUEST, user } }\n    function success(user) { return { type: LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: LOGIN_FAILURE, error } }\n}\n\nexport const logout = () => {\n    _logout();\n    return { type: LOGOUT };\n}"]},"metadata":{},"sourceType":"module"}