{"ast":null,"code":"import _regeneratorRuntime from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar todolistUrl = 'http://localhost:4000/api/todos'; // URL to todolist\n// const FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS'\n// export const fetchAllTodos = () => { \n//   return async (dispatch) => {\n//     try {\n//     const response = await axios.get(`${todolistUrl}`);\n//     dispatch(success(response.data));\n//     } catch(error) {\n//       console.log(Object.keys(error), error.message); \n//     }}   \n//     function success (data){\n//       return {\n//         type: FETCH_TODOS_SUCCESS, \n//         payload: {\n//           data\n//         }\n//       }}\n//   };\n\nexport var fetchAllTodos = function fetchAllTodos() {\n  return {\n    type: 'FETCH_TODOS_SUCCESS',\n    payload: {\n      request: {\n        method: 'GET',\n        url: \"\".concat(todolistUrl)\n      }\n    }\n  };\n};\nexport var addTodo = function addTodo(text) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(\"\".concat(todolistUrl), {\n                  text: text\n                });\n\n              case 2:\n                response = _context.sent;\n                dispatch(addTodosSuccess(response.data));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nvar ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\nexport var addTodosSuccess = function addTodosSuccess(response) {\n  return {\n    type: ADD_TODO_SUCCESS,\n    payload: {\n      id: response._id,\n      text: response.text\n    }\n  };\n};\nvar EDIT_TODO = 'EDIT_TODO';\nexport var editTodo = function editTodo(id, text) {\n  axios.put(\"\".concat(todolistUrl, \"/\").concat(id), {\n    text: text\n  });\n  return {\n    type: EDIT_TODO,\n    payload: {\n      id: id,\n      text: text\n    }\n  };\n};\nvar DELETE_TODO = 'DELETE_TODO';\nexport var deleteTodo = function deleteTodo(id) {\n  axios.delete(\"\".concat(todolistUrl, \"/\").concat(id));\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id: id\n    }\n  };\n};\nvar TOGGLE_SWITCH = 'TOGGLE_SWITCH';\nexport var toggleSwitch = function toggleSwitch(id, done) {\n  axios.put(\"\".concat(todolistUrl, \"/\").concat(id), {\n    done: !done\n  });\n  return {\n    type: TOGGLE_SWITCH,\n    payload: {\n      id: id,\n      done: !done\n    }\n  };\n};\nvar SEARCH_TODOS_SUCCESS = 'SEARCH_TODOS_SUCCESS';\nexport var searchTodosSuccess = function searchTodosSuccess(todoList) {\n  return {\n    type: SEARCH_TODOS_SUCCESS,\n    payload: {\n      todoList: todoList\n    }\n  };\n};\nexport var searchTodo = function searchTodo(text) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response, todoList;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"\".concat(todolistUrl));\n\n              case 2:\n                response = _context2.sent;\n                todoList = response.data.filter(function (todo) {\n                  return todo.text.toLowerCase().includes(text.toLowerCase());\n                });\n                dispatch(searchTodosSuccess(todoList));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nvar FILTER_TODO = 'FILTER_TODO';\nexport var filterTodos = function filterTodos(filterType) {\n  return {\n    type: FILTER_TODO,\n    payload: filterType\n  };\n};","map":{"version":3,"sources":["/home/developer/Документы/Projects/Todo/src/frontend/src/store/todos/todos-actions.js"],"names":["axios","todolistUrl","fetchAllTodos","type","payload","request","method","url","addTodo","text","dispatch","post","response","addTodosSuccess","data","ADD_TODO_SUCCESS","id","_id","EDIT_TODO","editTodo","put","DELETE_TODO","deleteTodo","delete","TOGGLE_SWITCH","toggleSwitch","done","SEARCH_TODOS_SUCCESS","searchTodosSuccess","todoList","searchTodo","get","filter","todo","toLowerCase","includes","FILTER_TODO","filterTodos","filterType"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst todolistUrl = 'http://localhost:4000/api/todos';  // URL to todolist\n\n// const FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS'\n// export const fetchAllTodos = () => { \n//   return async (dispatch) => {\n//     try {\n//     const response = await axios.get(`${todolistUrl}`);\n//     dispatch(success(response.data));\n//     } catch(error) {\n//       console.log(Object.keys(error), error.message); \n//     }}   \n    \n//     function success (data){\n//       return {\n//         type: FETCH_TODOS_SUCCESS, \n//         payload: {\n//           data\n//         }\n//       }}\n//   };\n\n  export const fetchAllTodos = () => {\n    return {\n      type: 'FETCH_TODOS_SUCCESS',\n      payload: {\n        request: {\n          method: 'GET',\n          url: `${todolistUrl}`,\n        }\n      }\n    }\n  }\n\n  \nexport const addTodo = text => {\n  return async (dispatch) => {\n    const response = await axios.post(`${todolistUrl}`, {text});\n    dispatch(addTodosSuccess(response.data));\n    }\n  }\n \nconst ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS'\nexport const addTodosSuccess = response => {  \n  return {\n    type: ADD_TODO_SUCCESS,\n    payload: {\n      id: response._id,\n      text: response.text\n    }\n  }\n}\n\nconst EDIT_TODO = 'EDIT_TODO'\nexport const editTodo = (id, text) => {\n  axios.put(`${todolistUrl}/${id}`, {text});\n  return {\n    type: EDIT_TODO,\n    payload: {\n      id,\n      text\n    }\n  }\n}\n\nconst DELETE_TODO = 'DELETE_TODO'\nexport const deleteTodo = (id) => {\n  axios.delete(`${todolistUrl}/${id}`);\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id\n    }\n  }\n}\n\nconst TOGGLE_SWITCH = 'TOGGLE_SWITCH'\nexport const toggleSwitch = (id, done) => {\n  axios.put(`${todolistUrl}/${id}`, {done: !done});\n  return {\n    type: TOGGLE_SWITCH,\n    payload: {\n      id,\n      done: !done\n    }\n  }\n}\n\nconst SEARCH_TODOS_SUCCESS = 'SEARCH_TODOS_SUCCESS'\nexport const searchTodosSuccess = todoList => {\n  return {\n    type: SEARCH_TODOS_SUCCESS,\n    payload: {\n      todoList\n    }\n  }\n}\n\nexport const searchTodo = text => {\n  return async (dispatch) => {\n    const response = await axios.get(`${todolistUrl}`);\n    const todoList = response.data.filter((todo) => todo.text.toLowerCase().includes(text.toLowerCase()))\n      dispatch(searchTodosSuccess (todoList));\n  }\n}\n\nconst FILTER_TODO = 'FILTER_TODO'\nexport const filterTodos = filterType => {\n  return {\n    type: FILTER_TODO,\n    payload: filterType\n    \n  }\n}"]},"metadata":{},"sourceType":"module"}