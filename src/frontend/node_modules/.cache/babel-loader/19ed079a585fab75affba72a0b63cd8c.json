{"ast":null,"code":"import _regeneratorRuntime from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/developer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Projects/Todo/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { _signUp, _login, _logout } from '../../services/user.service';\nimport history from '../../history';\nvar REGISTER_REQUEST = 'REGISTER_REQUEST';\nvar REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nvar REGISTER_FAILURE = 'REGISTER_FAILURE';\nvar LOGIN_REQUEST = 'LOGIN_REQUEST';\nvar LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nvar LOGIN_FAILURE = 'LOGIN_FAILURE';\nvar LOGOUT = 'LOGOUT';\nexport var signUp = function signUp(form) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(request(form.email));\n\n              case 2:\n                _context.next = 4;\n                return _signUp(form);\n\n              case 4:\n                response = _context.sent;\n\n                if (response) {\n                  dispatch(success(response));\n                  history.push('/');\n                } else {\n                  dispatch(failure(response.error));\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n\n  function request(user) {\n    return {\n      type: REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: REGISTER_FAILURE,\n      error: error\n    };\n  }\n};\nexport var signIn = function signIn(email, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return dispatch(request(email));\n\n              case 2:\n                _context2.next = 4;\n                return _login(email, password);\n\n              case 4:\n                response = _context2.sent;\n                console.log(response);\n\n                if (!response) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 9;\n                return localStorage.setItem('user', response);\n\n              case 9:\n                history.push('/');\n                _context2.next = 13;\n                break;\n\n              case 12:\n                dispatch(failure(response.error));\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n\n  function request(user) {\n    return {\n      type: LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: LOGIN_FAILURE,\n      error: error\n    };\n  }\n};\nexport var logout = function logout() {\n  _logout();\n\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["/home/developer/Документы/Projects/Todo/src/frontend/src/store/users/users-action.js"],"names":["_signUp","_login","_logout","history","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","signUp","form","dispatch","request","email","response","success","push","failure","error","user","type","signIn","password","console","log","localStorage","setItem","logout"],"mappings":"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","sourcesContent":["import {_signUp,  _login, _logout} from '../../services/user.service';\nimport history from '../../history'\n\nconst REGISTER_REQUEST = 'REGISTER_REQUEST'\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nconst REGISTER_FAILURE = 'REGISTER_FAILURE'\nconst LOGIN_REQUEST = 'LOGIN_REQUEST'\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nconst LOGIN_FAILURE = 'LOGIN_FAILURE'\nconst LOGOUT = 'LOGOUT'\n\nexport const signUp = (form) => {\n    return async (dispatch) => {\n        await dispatch(request( form.email ));\n        const response = await _signUp(form)\n        if (response){\n                dispatch(success(response));\n                history.push('/');\n            } else{            \n                dispatch(failure(response.error));\n            }        \n    };\n\n    function request(user) { return { type: REGISTER_REQUEST, user } }\n    function success(user) { return { type: REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: REGISTER_FAILURE, error } }\n}\n\nexport const signIn = (email, password) => {\n    return async (dispatch) => {\n        await dispatch(request( email ));\n        const response = await _login(email, password)\n        console.log(response);\n        if (response){\n           await localStorage.setItem('user', response);\n                history.push('/');\n            } else{            \n                dispatch(failure(response.error));\n            }        \n    };\n\n    function request(user) { return { type: LOGIN_REQUEST, user } }\n    function success(user) { return { type: LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: LOGIN_FAILURE, error } }\n}\n\nexport const logout = () => {\n    _logout();\n    return { type: LOGOUT };\n}"]},"metadata":{},"sourceType":"module"}